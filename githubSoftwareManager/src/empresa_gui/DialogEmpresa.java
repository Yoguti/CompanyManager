/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package empresa_gui;
import empresa_model.Empresa;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import empresa_model.*;
import empresa_model.AreaDeAtividade;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author cancian
 */
public class DialogEmpresa extends javax.swing.JDialog {

    /**
     * Creates new form DialogEmpresa
     */
   private List<String> temporarySetores = new ArrayList<>(); 
    private Empresa model;
    private DialogEndereco myDialog;
    private Endereco modelEndereco;
   
    
    
public DialogEmpresa(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    myInitComponents();

}
    
    private void myInitComponents() {
        for (AreaDeAtividade area : AreaDeAtividade.values()) {
            comboArea.addItem(area.toString());
        }

        setPlaceholder(textCNPJ, "12.345.678/0003-00");
    }

    private static void setPlaceholder(JTextField textField, String placeholder) {
        textField.setText(placeholder);
        textField.setForeground(Color.LIGHT_GRAY);

        textField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (textField.getText().equals(placeholder)) {
                    textField.setText("");
                    textField.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (textField.getText().isEmpty()) {
                    textField.setForeground(Color.LIGHT_GRAY);
                    textField.setText(placeholder);
                }
            }
        });
    }

    public void setEndereco(Endereco endereco) {
        this.modelEndereco = endereco;
        textEnderecoNaoEditavel.setText(endereco.toString());
    }

    public Empresa getModalResult() {
        return model;
    }

    public void setModel(Empresa model) {
        this.model = model;
        if (model != null) {
            textNome.setText(model.getNome());
            textCNPJ.setText(model.getCnpj().toFormattedString());
            comboArea.setSelectedItem(model.getAreaDeAtividade().toString());
        }
    }

    public void updateEmpresaSetores(Empresa empresa) {
        if (empresa == null) {
            System.err.println("Erro ao atualizar setores da Empresa: Empresa não definida.");
            return;
        }

        if (temporarySetores.isEmpty()) {
            System.err.println("Erro ao atualizar setores da Empresa: Nenhum setor temporário para adicionar.");
            return;
        }

        try {
            Setor diretorias = empresa.getSetor();
            for (String setorName : temporarySetores) {
                Setor newSetor = new Setor(setorName);
                diretorias.getSubsetor().add(newSetor);
            }

            temporarySetores.clear();
            System.out.println("Setores atualizados com sucesso na Empresa.");
        } catch (Exception ex) {
            System.err.println("Erro ao atualizar setores da Empresa: " + ex.getMessage());
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        labelCNPj = new javax.swing.JLabel();
        textCNPJ = new javax.swing.JTextField();
        labelArea = new javax.swing.JLabel();
        comboArea = new javax.swing.JComboBox<>();
        buttonEndereco = new javax.swing.JButton();
        labelEndereço = new javax.swing.JLabel();
        textEnderecoNaoEditavel = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        buttonOk = new javax.swing.JButton();
        buttonCancela = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelNome.setText("Nome:");

        labelCNPj.setText("CNPJ:");

        textCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCNPJActionPerformed(evt);
            }
        });

        labelArea.setText("Área de Atividade:");

        buttonEndereco.setText("...");
        buttonEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnderecoActionPerformed(evt);
            }
        });

        labelEndereço.setText("Endereço:");

        textEnderecoNaoEditavel.setEditable(false);
        textEnderecoNaoEditavel.setDisabledTextColor(new java.awt.Color(35, 35, 35));
        textEnderecoNaoEditavel.setEnabled(false);
        textEnderecoNaoEditavel.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelArea)
                    .addComponent(labelCNPj)
                    .addComponent(labelNome)
                    .addComponent(labelEndereço))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textNome, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                    .addComponent(textCNPJ)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboArea, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textEnderecoNaoEditavel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEndereco)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCNPj)
                    .addComponent(textCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelArea)
                    .addComponent(comboArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEndereço)
                    .addComponent(buttonEndereco)
                    .addComponent(textEnderecoNaoEditavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonOk.setText("Ok");
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        buttonCancela.setText("Cancela");
        buttonCancela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addComponent(buttonCancela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonOk)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancela))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Crie uma nova empresa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
     try {
    String nome = textNome.getText();
    String cnpjString = textCNPJ.getText();
    AreaDeAtividade area = AreaDeAtividade.values()[comboArea.getSelectedIndex()];
    
    model = new Empresa(nome, cnpjString, area);
    model.setEndereco(modelEndereco);

    GerenciarSetores dialogSetores = new GerenciarSetores(this, true, model);
    dialogSetores.setVisible(true);

    updateEmpresaSetores(model);
    this.setVisible(false);    
    
    
    if (cnpjString == null || nome.trim().isEmpty()) {
        throw new IllegalArgumentException("CNPJ da empresa não pode estar vazio.");
    }
    
     }
     catch(Exception ex) {
            Logger.getLogger(DialogEmpresa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ô Ixtepô, preenche tudo aí");
     }
 
    }//GEN-LAST:event_buttonOkActionPerformed

    public class GerenciarSetores extends JDialog {

    private Empresa empresa;
    private JTree treeSetores;
    private DefaultTreeModel treeModel;
    private JButton buttonAdicionar;
    private JButton buttonRemover;
    private JButton buttonAvancar;

    public GerenciarSetores(JDialog parent, boolean modal, Empresa empresa) {
        super(parent, modal);
        this.empresa = empresa;
        initComponents();
        customInitComponents();
    }

    private void customInitComponents() {
        setTitle("Gerenciar Setores");
        setSize(400, 300);
        setLocationRelativeTo(null);
        
        treeSetores = new JTree(createTreeModel());
        JScrollPane scrollPane = new JScrollPane(treeSetores);
        
        JPanel panelButtons = new JPanel();
        buttonAdicionar = new JButton("Adicionar Setor");
        buttonRemover = new JButton("Remover Setor");
        buttonAvancar = new JButton("Avançar");
        
        panelButtons.add(buttonAdicionar);
        panelButtons.add(buttonRemover);
        panelButtons.add(buttonAvancar);
        
        buttonAdicionar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                adicionarSetor();
            }
        });
          
        buttonRemover.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                removerSetor();
            }
        });
        
        buttonAvancar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                avancar();
            }
        });

        getContentPane().add(scrollPane, BorderLayout.CENTER);
        getContentPane().add(panelButtons, BorderLayout.SOUTH);
    }

    private DefaultTreeModel createTreeModel() {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Setores");
        addSetoresToNode(root, empresa.getSetor());
        treeModel = new DefaultTreeModel(root);
        return treeModel;
    }

    private void addSetoresToNode(DefaultMutableTreeNode node, Setor setor) {
        if (setor != null) {
            DefaultMutableTreeNode setorNode = new DefaultMutableTreeNode(setor.getDescricao());
            node.add(setorNode);
            for (Setor subsetor : setor.getSubsetor()) {
                addSetoresToNode(setorNode, subsetor);
            }
        }
    }

private void adicionarSetor() {
    String setorName = JOptionPane.showInputDialog(this, "Nome do novo setor:");
    if (setorName != null && !setorName.trim().isEmpty()) {
        Setor newSetor = new Setor(setorName);
        DefaultMutableTreeNode newSetorNode = new DefaultMutableTreeNode(setorName);
        TreePath selectedPath = treeSetores.getSelectionPath();
        
        if (selectedPath == null) {
            DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel.getRoot();
            treeModel.insertNodeInto(newSetorNode, root, root.getChildCount());
            empresa.addSetor(setorName);
        } else {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
            treeModel.insertNodeInto(newSetorNode, selectedNode, selectedNode.getChildCount());
            Setor parentSetor = findSetorByDescricao(empresa.getSetor(), selectedNode.getUserObject().toString());
            if (parentSetor != null) {
                parentSetor.addSubsetor(newSetor);
            }
        }
        treeSetores.setSelectionPath(new TreePath(newSetorNode.getPath()));
    }
}

private void removerSetor() {
    TreePath selectedPath = treeSetores.getSelectionPath();
    if (selectedPath != null) {
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
        if (selectedNode.getParent() != null) {
            String setorDescricao = selectedNode.getUserObject().toString();
            Setor setorToRemove = findSetorByDescricao(empresa.getSetor(), setorDescricao);
            if (setorToRemove != null) {
                DefaultMutableTreeNode parentNode = (DefaultMutableTreeNode) selectedNode.getParent();
                treeModel.removeNodeFromParent(selectedNode);
                Setor parentSetor = findSetorByDescricao(empresa.getSetor(), parentNode.getUserObject().toString());
                if (parentSetor != null) {
                    parentSetor.removeSubsetor(setorToRemove);
                } else {
                    empresa.removeSetor(setorToRemove);
                }
            }
        }
    }
      
}

 private Setor findSetorByDescricao(Setor root, String descricao) {
        if (root.getDescricao().equals(descricao)) {
            return root;
        }
        for (Setor subsetor : root.getSubsetor()) {
            Setor found = findSetorByDescricao(subsetor, descricao);
            if (found != null) {
                return found;
            }
        }
        return null;
    }

}
    
    private void avancar() {
     try {
         Empresa empresa = model;
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Escolha o local para salvar os arquivos");
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int userSelection = fileChooser.showSaveDialog(this);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File directory = fileChooser.getSelectedFile();

                EmpresaSerialization serializer = new EmpresaSerialization();
                serializer.serializeEmpresaObjectToFile(empresa, directory.getAbsolutePath() + "/empresa_object_data.ser");

                JOptionPane.showMessageDialog(this, "Arquivos salvos com sucesso.");
            }

            this.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(DialogEmpresa.class.getName()).log(Level.SEVERE, null, ex); 
        }
    
}

    
    
    private void buttonCancelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelaActionPerformed
        // TODO add your handling code here:
        model = null;
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelaActionPerformed

    private void textCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCNPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCNPJActionPerformed

    private void buttonEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnderecoActionPerformed
 DialogEndereco dialogEndereco = new DialogEndereco(this, true);
dialogEndereco.setVisible(true);

    
// TODO add your handling code here:
    }//GEN-LAST:event_buttonEnderecoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancela;
    private javax.swing.JButton buttonEndereco;
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox<String> comboArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelArea;
    private javax.swing.JLabel labelCNPj;
    private javax.swing.JLabel labelEndereço;
    private javax.swing.JLabel labelNome;
    private javax.swing.JTextField textCNPJ;
    private javax.swing.JTextField textEnderecoNaoEditavel;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables
}
